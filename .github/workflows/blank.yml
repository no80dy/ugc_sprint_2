name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  run-tests:
    name: Run tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Test on python ${{ matrix.python-version }}
        run: |
          pytest tests/unit/test.py

  run-linters:
    name: Run linters
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Lint with wemake-python-styleguide
        run: |
          pip install flake8 wemake-python-styleguide pepper8
          flake8 --output-file=report.txt .

      - name: Convert report to HTML file
        if: always()
        run: |
          pepper8 -o report.html report.txt

      - name: upload report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: flake8-report
          path: report.html

      - name: Type check with mypy
        run: |
          pip install mypy
          mypy .

  telegram-notification:
    name: Telegram notification
    runs-on: ubuntu-latest

    if: always()
    needs: [run-tests, run-linters]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Send message in telegram
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            :fire: ${{ github.actor }} created commit:
            
            CI/CD jobs statuses:
            Tests: ${{ needs.run-tests.result}}
            Linters: ${{ needs.run-linters.result }}

            Commit message: ${{ github.event.commits[0].message }}

            Repository: ${{ github.repository }}

            See changes: https://github.com/${{ github.repository }}/commit/${{ github.sha }}
